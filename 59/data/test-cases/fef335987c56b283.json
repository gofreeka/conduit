{
  "uid" : "fef335987c56b283",
  "name" : "test_003_log_out",
  "fullName" : "tests.test_003#test_003_log_out",
  "historyId" : "6960708fee8e267c3d1a36772a947ee7",
  "time" : {
    "start" : 1628809410873,
    "stop" : 1628809410889,
    "duration" : 16
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div/nav/div/ul/li[4]/a\"}\n  (Session info: headless chrome=92.0.4515.131)",
  "statusTrace" : "def test_003_log_out():\n>       username = driver.find_element_by_xpath(\"//div/nav/div/ul/li[4]/a\")\n\ntests/test_003.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:394: in find_element_by_xpath\n    return self.find_element(by=By.XPATH, value=xpath)\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:976: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4e44e75a00>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...wn>\\\\n#15 0x5564b46dae58 \\\\u003Cunknown>\\\\n#16 0x5564b46f4dfd \\\\u003Cunknown>\\\\n#17 0x7fd94c746609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div/nav/div/ul/li[4]/a\"}\nE         (Session info: headless chrome=92.0.4515.131)\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_003"
  }, {
    "name" : "host",
    "value" : "fv-az33-581"
  }, {
    "name" : "thread",
    "value" : "3767-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_003"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "99aa427ebf163524",
        "reportUrl" : "https://gofreeka.github.io/conduit/58//#testresult/99aa427ebf163524",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div/nav/div/ul/li[4]/a\"}\n  (Session info: headless chrome=92.0.4515.131)",
        "time" : {
          "start" : 1628807822702,
          "stop" : 1628807822715,
          "duration" : 13
        }
      }, {
        "uid" : "b8a2c46f4a86b0a",
        "reportUrl" : "https://gofreeka.github.io/conduit/57//#testresult/b8a2c46f4a86b0a",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div/nav/div/ul/li[4]/a\"}\n  (Session info: headless chrome=92.0.4515.131)",
        "time" : {
          "start" : 1628806459154,
          "stop" : 1628806459168,
          "duration" : 14
        }
      }, {
        "uid" : "ae50a021f671211c",
        "reportUrl" : "https://gofreeka.github.io/conduit/56//#testresult/ae50a021f671211c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div/nav/div/ul/li[4]/a\"}\n  (Session info: headless chrome=92.0.4515.131)",
        "time" : {
          "start" : 1628806088431,
          "stop" : 1628806088450,
          "duration" : 19
        }
      }, {
        "uid" : "e40929d1eb97624c",
        "reportUrl" : "https://gofreeka.github.io/conduit/55//#testresult/e40929d1eb97624c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div/nav/div/ul/li[4]/a\"}\n  (Session info: headless chrome=92.0.4515.131)",
        "time" : {
          "start" : 1628802593483,
          "stop" : 1628802593496,
          "duration" : 13
        }
      }, {
        "uid" : "23513caca9222be2",
        "reportUrl" : "https://gofreeka.github.io/conduit/54//#testresult/23513caca9222be2",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div/nav/div/ul/li[4]/a\"}\n  (Session info: headless chrome=92.0.4515.131)",
        "time" : {
          "start" : 1628801008253,
          "stop" : 1628801008265,
          "duration" : 12
        }
      }, {
        "uid" : "22b9d63d3605a83c",
        "reportUrl" : "https://gofreeka.github.io/conduit/53//#testresult/22b9d63d3605a83c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div/nav/div/ul/li[4]/a\"}\n  (Session info: headless chrome=92.0.4515.131)",
        "time" : {
          "start" : 1628799780437,
          "stop" : 1628799780453,
          "duration" : 16
        }
      }, {
        "uid" : "97a8867ba69d72bb",
        "reportUrl" : "https://gofreeka.github.io/conduit/52//#testresult/97a8867ba69d72bb",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'testuser1' == None\n +  where None = <bound method WebElement.get_attribute of <selenium.webdriver.remote.webelement.WebElement (session=\"fecf35dc2ff4103e4454e7a0d54c92b7\", element=\"6907d553-b186-4603-8292-9b19bfc3ec49\")>>('value')\n +    where <bound method WebElement.get_attribute of <selenium.webdriver.remote.webelement.WebElement (session=\"fecf35dc2ff4103e4454e7a0d54c92b7\", element=\"6907d553-b186-4603-8292-9b19bfc3ec49\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"fecf35dc2ff4103e4454e7a0d54c92b7\", element=\"6907d553-b186-4603-8292-9b19bfc3ec49\")>.get_attribute",
        "time" : {
          "start" : 1628796942579,
          "stop" : 1628796942598,
          "duration" : 19
        }
      }, {
        "uid" : "f7f3644cee1316d1",
        "reportUrl" : "https://gofreeka.github.io/conduit/52//#testresult/f7f3644cee1316d1",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'testuser1' == None\n +  where None = <bound method WebElement.get_attribute of <selenium.webdriver.remote.webelement.WebElement (session=\"ef3552789261dac0dfdc414f318f9673\", element=\"5d671e01-6264-45f2-8d39-e8e0c47669cc\")>>('value')\n +    where <bound method WebElement.get_attribute of <selenium.webdriver.remote.webelement.WebElement (session=\"ef3552789261dac0dfdc414f318f9673\", element=\"5d671e01-6264-45f2-8d39-e8e0c47669cc\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"ef3552789261dac0dfdc414f318f9673\", element=\"5d671e01-6264-45f2-8d39-e8e0c47669cc\")>.get_attribute",
        "time" : {
          "start" : 1628796236247,
          "stop" : 1628796236264,
          "duration" : 17
        }
      }, {
        "uid" : "60bac97355863e7e",
        "reportUrl" : "https://gofreeka.github.io/conduit/51//#testresult/60bac97355863e7e",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'testuser1' == None\n +  where None = <bound method WebElement.get_attribute of <selenium.webdriver.remote.webelement.WebElement (session=\"5edfa5a3af515f416e94649465490a31\", element=\"eb43d690-ddae-4e7a-9b28-3100c9b0a31c\")>>('value')\n +    where <bound method WebElement.get_attribute of <selenium.webdriver.remote.webelement.WebElement (session=\"5edfa5a3af515f416e94649465490a31\", element=\"eb43d690-ddae-4e7a-9b28-3100c9b0a31c\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"5edfa5a3af515f416e94649465490a31\", element=\"eb43d690-ddae-4e7a-9b28-3100c9b0a31c\")>.get_attribute",
        "time" : {
          "start" : 1628795797576,
          "stop" : 1628795797592,
          "duration" : 16
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fef335987c56b283.json",
  "parameterValues" : [ ]
}